import random
import smtplib

class User:
    def __init__(self, phone_number, email, password):
        self.phone_number = phone_number
        self.email = email
        self.password = password

class UserManager:
    def __init__(self):
        self.users = {}
        self.load_data()

    def load_data(self):
        try:
            with open('data.txt', 'r') as file:
                for line in file:
                    phone_number, email, password = line.strip().split(',')
                    self.users[phone_number] = User(phone_number, email, password)
        except FileNotFoundError:
            pass
        except Exception as e:
            print("An error occurred while loading data:", e)

    def save_data(self):
        try:
            with open('data.txt', 'w') as file:
                for user in self.users.values():
                    file.write(f"{user.phone_number},{user.email},{user.password}\n")
        except Exception as e:
            print("An error occurred while saving data:", e)

    def login(self):
        phone_number = input("Enter phone_number: ").strip()
        password = input("Enter password: ").strip()
        if phone_number in self.users and self.users[phone_number].password == password:
            print("Login successful!")
        else:
            print("phone_number or password incorrect.")
            choice = input("Forgot password? (yes/no): ").strip().lower()
            if choice == 'yes':
                self.forgot_password(phone_number)
            else:
                choice = input("Do you want to sign in (yes/no): ").strip().lower()
                if choice == 'yes':
                    self.signup()
                else:
                    print("good bye")
                    
    def forgot_password(self, phone_number):
        if phone_number in self.users:
            user = self.users[phone_number]
            check_otp = self.generate_otp()
        else:
            print("phone_number not found.")

    def generate_otp(self):
        OTP = random.randint(100000,999999)      #generating a randomm 6-digit OTP
        #setting up server
        server = smtplib.SMTP('smtp.gmail.com',587)
        #server = smtplib.SMTP('64.233.184.108',587)           #IP address of smtp.gmail.com to bypass DNS resolution
        server.starttls()

        name = input("enter your name:")
        global receiver_email
        receiver_email = input("enter ur email id:")

        def email_verification(receiver_email):
            email_check1 = ["gmail","hotmail","yahoo","outlook"]
            email_check2 = [".com",".in",".org",".edu",".co.in"]
            count = 0

            for domain in email_check1:
                if domain in receiver_email:
                    count+=1
            for site in email_check2:
                if site in receiver_email:
                    count+=1

            if "@" not in receiver_email or count!=2:
                print("invalid email id")
                new_receiver_email = input("enter correct email id:")
                email_verification(new_receiver_email)
                return new_receiver_email
            return receiver_email

        valid_receiver_email = email_verification(receiver_email)
        password1 = "stqqwjqoocucknsx"
        server.login("priyanshu25122002@gmail.com",password1)

        body = "Respected Customer,"+"\n"+"\n"+"your OTP is "+str(OTP)+"."
        subject = "OTP verification using python"
        message = f'subject:{subject}\n\n{body}'

        server.sendmail("priyanshu25122002@gmail.com",valid_receiver_email,message)

        def sending_otp(receiver_email):
            new_otp = random.randint(100000,999999)

            body = "Respected Customer,"+"\n"+"\n"+"your OTP is "+str(new_otp)+"."
            subject = "OTP verification using python" 
            message = f'subject:{subject}\n\n{body}'
            server.sendmail("priyanshu25122002@gmail.com",receiver_email,message)
            print("OTP has been sent to"+receiver_email)
            received_OTP = int(input("enter OTP:"))

            if received_OTP==new_otp:
                print("OTP verified")
                new_password = input("Enter new password: ").strip()
                self.users[phone_number].password = new_password
                self.users[phone_number].otp = None
                self.save_data()
                print("Password reset successful!")
            else:
                print("invalid OTP")
                print("resending OTP.....")
                sending_otp(receiver_email)
            
        print("OTP has been sent to "+valid_receiver_email)
        received_OTP = int(input("enter OTP:"))

        if received_OTP==OTP:
            print("OTP verified")
            with open('data.txt', 'r') as file:
                for line in file:
                    phone_number, email, password = line.strip().split(',')
                    self.users[phone_number] = User(phone_number, email, password)
            new_password = input("Enter new password: ").strip()
            self.users[phone_number].password = new_password
            self.save_data()
            print("Password reset successful!")
        else:
            print("invalid OTP")
            answer = input("enter yes to resend OTP on same email and no to enter a new email id:")
            YES = ['YES','yes','Yes']
            NO = ['NO','no','No']
            if answer in YES:
                sending_otp(valid_receiver_email)
            elif answer in NO:
                new_receiver_email = input("enter new email id:")
                email_verification(new_receiver_email)
                sending_otp(new_receiver_email)
            else:
                print("invalid input")

        server.quit()



    def signup(self):
        while True:
            phone_number = input("Enter phone_number: ").strip()
            email = input("Enter email: ").strip()
            password = input("Enter password: ").strip()

            if not (phone_number and email and password):
                print("Please enter valid values for phone_number, email, and password.")
                continue

            if phone_number in self.users:
                print("phone_number already exists. Please choose another.")
            else:
                self.users[phone_number] = User(phone_number, email, password)
                self.save_data()
                print("Sign up successful!")
                break

if __name__ == "__main__":
    userManager = UserManager()
    userManager.login()
